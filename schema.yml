openapi: 3.0.3
info:
  title: MYPFE Api Documentation
  version: 0.0.0
paths:
  /Api/All_Categories/:
    get:
      operationId: Api_All_Categories_retrieve
      tags:
      - Api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /Api/Delete_Date/{id}/:
    delete:
      operationId: Api_Delete_Date_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - Api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /Api/RegisterDate/:
    post:
      operationId: Api_RegisterDate_create
      tags:
      - Api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /Api/Related_objects/:
    get:
      operationId: Api_Related_objects_retrieve
      tags:
      - Api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /auth/Client_Profile/:
    get:
      operationId: auth_Client_Profile_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /auth/Client_Register/:
    post:
      operationId: auth_Client_Register_create
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/Service_Register/:
    post:
      operationId: auth_Service_Register_create
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
components:
  schemas:
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
